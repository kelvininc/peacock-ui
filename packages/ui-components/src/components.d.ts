/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { EActionButtonType } from "./components/action-button/action-button.types";
import { EAnchorTarget } from "./utils/types/anchor";
import { ESwitchButtonState } from "./components/switch-button/switch-button.types";
export namespace Components {
    interface KvActionButton {
        "buttonClass": string;
        "buttonId": string;
        "enabled": boolean;
        "fixedWidth": number;
        "icon": string;
        "smallSize": boolean;
        "text": string;
        "type": EActionButtonType;
    }
    interface KvLink {
        /**
          * (optional) The link to open when clicking on the tag
         */
        "href"?: string;
        /**
          * (required) Main component label
         */
        "label": string;
        /**
          * (optional) Description for the label
         */
        "subtitle"?: string;
        /**
          * (optional) The link to open when clicking on the tag
         */
        "target"?: EAnchorTarget;
    }
    interface KvSwitchButton {
        /**
          * (optional) If `true` the button is disabled
         */
        "disabled": boolean;
        /**
          * (optional) Button's label
         */
        "label": string;
        /**
          * (optional) If `ON` the button is ON
         */
        "state": ESwitchButtonState;
    }
}
declare global {
    interface HTMLKvActionButtonElement extends Components.KvActionButton, HTMLStencilElement {
    }
    var HTMLKvActionButtonElement: {
        prototype: HTMLKvActionButtonElement;
        new (): HTMLKvActionButtonElement;
    };
    interface HTMLKvLinkElement extends Components.KvLink, HTMLStencilElement {
    }
    var HTMLKvLinkElement: {
        prototype: HTMLKvLinkElement;
        new (): HTMLKvLinkElement;
    };
    interface HTMLKvSwitchButtonElement extends Components.KvSwitchButton, HTMLStencilElement {
    }
    var HTMLKvSwitchButtonElement: {
        prototype: HTMLKvSwitchButtonElement;
        new (): HTMLKvSwitchButtonElement;
    };
    interface HTMLElementTagNameMap {
        "kv-action-button": HTMLKvActionButtonElement;
        "kv-link": HTMLKvLinkElement;
        "kv-switch-button": HTMLKvSwitchButtonElement;
    }
}
declare namespace LocalJSX {
    interface KvActionButton {
        "buttonClass"?: string;
        "buttonId"?: string;
        "enabled"?: boolean;
        "fixedWidth"?: number;
        "icon"?: string;
        "onButtonClick"?: (event: CustomEvent<MouseEvent>) => void;
        "smallSize"?: boolean;
        "text"?: string;
        "type": EActionButtonType;
    }
    interface KvLink {
        /**
          * (optional) The link to open when clicking on the tag
         */
        "href"?: string;
        /**
          * (required) Main component label
         */
        "label": string;
        /**
          * Emitted when clicking the label
         */
        "onLabelClick"?: (event: CustomEvent<MouseEvent>) => void;
        /**
          * (optional) Description for the label
         */
        "subtitle"?: string;
        /**
          * (optional) The link to open when clicking on the tag
         */
        "target"?: EAnchorTarget;
    }
    interface KvSwitchButton {
        /**
          * (optional) If `true` the button is disabled
         */
        "disabled"?: boolean;
        /**
          * (optional) Button's label
         */
        "label"?: string;
        /**
          * Emitted when switch's state changes
         */
        "onSwitchStateChange"?: (event: CustomEvent<ESwitchButtonState>) => void;
        /**
          * (optional) If `ON` the button is ON
         */
        "state"?: ESwitchButtonState;
    }
    interface IntrinsicElements {
        "kv-action-button": KvActionButton;
        "kv-link": KvLink;
        "kv-switch-button": KvSwitchButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "kv-action-button": LocalJSX.KvActionButton & JSXBase.HTMLAttributes<HTMLKvActionButtonElement>;
            "kv-link": LocalJSX.KvLink & JSXBase.HTMLAttributes<HTMLKvLinkElement>;
            "kv-switch-button": LocalJSX.KvSwitchButton & JSXBase.HTMLAttributes<HTMLKvSwitchButtonElement>;
        }
    }
}
